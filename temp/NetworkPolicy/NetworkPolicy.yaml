# Policy generated by Tufin SecureCloud
# Account: ben-demo-env
# Cluster: test
# Namespaces: [default data]
# 
# Notes:
# Please review the policies before applying them.
#
# 1. To apply the policies run:
# kubectl apply -f ben-demo-env-test.yaml
#
# 2. Each namespace should have a unique 'namespace' label
# The auto-generated policies rely on the namespace label to allow inter-namespace access.
# Run the following command to add labels to all namespaces:                                    
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl label namespace $ns namespace=$ns --overwrite; done
# You can delete these labels with:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl label namespace $ns namespace-; done
#
# 3. To delete Tufin Orca policies run:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl delete netpol -l tufin-owner=tufin-orca -l tufin-mode=auto-generated --namespace=$ns; done
#
# 4. To delete ALL network policies run:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl delete netpol --all --namespace=$ns; done
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-10-29T13:58:00Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.admin
    namespace: default
spec:
    ingress:
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: '' # missing label - see note 2 above
    podSelector:
        matchLabels:
            app: admin
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-10-29T13:58:00Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.redis
    namespace: default
spec:
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    app: indexer
    podSelector:
        matchLabels:
            app: redis
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-10-29T13:58:00Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default.customer
    namespace: default
spec:
    ingress:
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: '' # missing label - see note 2 above
    podSelector:
        matchLabels:
            app: customer
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-10-29T13:58:00Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: data
    namespace: data
spec:
    podSelector: {}
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-10-29T13:58:00Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default
    namespace: default
spec:
    podSelector: {}
    policyTypes:
      - Ingress
